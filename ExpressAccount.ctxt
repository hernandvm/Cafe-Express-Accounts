#BlueJ class context
comment0.target=ExpressAccount
comment0.text=\r\n\ \r\n\ File\:\ ExpressAccount.java\r\n\ Project\:\ CS150\ Project\ 2,\ Fall\ 2022\r\n\ Date\:\ 9/27/2022\r\n\ E-mail\:\ hernandv@lafayette.edu\r\n\ \r\n\ Class\ Description\:\ \r\n\ This\ ExpressAccount\ class\ includes\ a\ constructor\ and\ methods\r\n\ that\ create\ a\ (Student/Faculty)ExpressAccount\ object\ (express\ card\ account).\r\n\ The\ methods\ in\ this\ class\ allow\ for\ the\ account\ information\r\n\ to\ be\ changed\ and\ managed\ when\ called.\ Said\ information\ \r\n\ includes\ account\ balance,\ number\ of\ meals,\ and\ deposits.\ This\r\n\ parent\ class\ is\ inherited\ by\ FacultyExpressAccount\ and\r\n\ StudentExpressAccount\ superclasses.\r\n\r\n\ @author\ Victor\ Hernandez\ Jr\r\n\ @version\ September\ 27,\ 2022\r\n
comment1.params=accNum
comment1.target=ExpressAccount(int)
comment1.text=\r\n\ Constructor\ for\ ExpressAccount\ class\r\n
comment10.params=
comment10.target=double\ getPricePerMeal()
comment10.text=\r\n\ Name\:\ getPricePerMeal\r\n\ Preconditon\:\r\n\ Postcondition\:\r\n\ @param\r\n\ @return\ double\ -\ Price\ per\ each\ meal\ (8.0\ or\ 10.0)\r\n
comment11.params=
comment11.target=int\ getNumOfMeals()
comment11.text=\r\n\ Name\:\ getNumOfMeals\r\n\ Preconditon\:\r\n\ Postcondition\:\r\n\ @param\ \r\n\ @return\ int\ -\ Number\ of\ meals\ in\ express\ card\ account\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Name\:\ toString\r\n\ Preconditon\:\r\n\ Postcondition\:\r\n\ @param\r\n\ @return\ String\ -\ Express\ Account\ account\ number,\ \r\n\ account\ balance,\ and\ number\ of\ meals\ in\ the\ account\ \r\n
comment13.params=
comment13.target=void\ haveMeal()
comment13.text=\r\n\ Name\:\ haveMeal\r\n\ Preconditon\:\ number\ of\ meals\ is\ greater\ than\ 0\r\n\ Postcondition\:\ number\ of\ meals\ decrease\ based\ on\ number\ of\ meals\r\n\ @param\r\n\ @return\r\n
comment14.params=deposit
comment14.target=void\ makeDeposit(double)
comment14.text=\r\n\ Name\:\ makeDeposit\r\n\ Description\:\ This\ abstract\ class\ is\ meant\ to\ be\ overidden\ by\ \r\n\ subclasses,\ which\ will\ use\ parameter\ "deposit,"\ of\ \r\n\ double\ type\ and\ from\ user's\ input,\ to\ add\ to\ account\ balance\r\n
comment15.params=mealsAmt
comment15.target=void\ purchaseMeals(int)
comment15.text=\r\n\ Name\:\ purchaseMeals\r\n\ Preconditon\:\ user\ has\ sufficient\ funds\ for\ the\ desired\ amount\ of\r\n\ meals\ they\ want\ to\ purchase\r\n\ Postcondition\:\ number\ of\ meals\ has\ increased\ based\ upon\ meals\r\n\ purchased\r\n\ @param\ mealsAmt\ -\ integer\ amount\ of\ meals\ user\ entered\ to\ purchase\r\n\ @return\r\n
comment2.params=
comment2.target=int\ getAccountNumber()
comment2.text=\r\n\ Name\:\ getAccountNumber\r\n\ Preconditon\:\r\n\ Postcondition\:\r\n\ @param\r\n\ @return\ int\ -\ Account\ number\r\n
comment3.params=name
comment3.target=void\ setAccountTypeName(java.lang.String)
comment3.text=\r\n\ Name\:\ setAccountTypeName\r\n\ Precondition\:\ accountTypeName\ has\ not\ been\ initialized\r\n\ Postcondition\:\ accountTypeName\ has\ been\ initialized\ to\ \r\n\ "Student"\ or\ "Faculty"\r\n\ @param\ name\ -\ String\ from\ respective\ subclass\r\n\ @return\r\n
comment4.params=
comment4.target=java.lang.String\ getAccountTypeName()
comment4.text=\r\n\ Name\:\ getAccountTypeName\r\n\ Precondition\:\r\n\ Postcondition\:\r\n\ @param\r\n\ @return\ String\ -\ Account\ type\ name\r\n
comment5.params=
comment5.target=double\ getAccountBalance()
comment5.text=\r\n\ Name\:\ getAccountBalance\r\n\ Preconditon\:\r\n\ Postcondition\:\r\n\ @param\r\n\ @return\ double\ -\ Account\ balance\ rounded\ to\ the\ nearest\ hundredth\r\n
comment6.params=newBalance
comment6.target=void\ setAccountBalance(double)
comment6.text=\r\n\ Name\:\ setAccountBalance\r\n\ Precondition\:\ Account\ balance\ needs\ to\ be\ updated\r\n\ Postcondition\:\ Account\ balance\ is\ updated\ according\ to\ parameter\ newBalance\r\n\ @param\ newBalance\ -\ new\ account\ balance\ to\ update\ to\r\n\ @return\r\n
comment7.params=
comment7.target=double\ getBaseAmtForBonus()
comment7.text=\r\n\ Name\:\ getBaseAmtForBonus\r\n\ Preconditon\:\r\n\ Postcondition\:\r\n\ @param\r\n\ @return\ double\ -\ Base\ amount\ for\ deposit\ bonus\r\n
comment8.params=baseAmt
comment8.target=void\ setBaseAmtForBonus(double)
comment8.text=\r\n\ Name\:\ setBaseAmtForBonus\r\n\ Precondition\:\ Base\ amount\ for\ bonus\ must\ be\ updated\r\n\ Postcondition\:\ Base\ amount\ for\ bonus\ is\ updated\ according\ to\ parameter\ baseAmt\r\n\ @param\ baseAmt\ -\ double\ type\ with\ value\ to\ set\ baseAmtForBonus\ to\r\n\ @return\r\n
comment9.params=price
comment9.target=void\ setPricePerMeal(double)
comment9.text=\r\n\ Name\:\ setPricePerMeal\r\n\ Precondition\:\ pricePerMeal\ has\ not\ been\ initialized\r\n\ Postcondition\:\ pricePerMeal\ is\ initialized\ by\ constructor\r\n\ of\ respective\ subclass\r\n\ @param\ price\ -\ variable\ of\ double\ type\ from\r\n\ subclass\ for\ initialization\r\n\ @return\r\n
numComments=16
